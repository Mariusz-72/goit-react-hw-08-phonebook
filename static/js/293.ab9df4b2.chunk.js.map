{"version":3,"file":"static/js/293.ab9df4b2.chunk.js","mappings":"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","sources":["Redux/Filter/filterSelectors.js","Redux/Contacts/contactsSelectors.js","webpack://goit-react-hw-08-phonebook/./src/components/MyContactForm/MyContactForm.module.css?52ef","components/MyContactForm/MyContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/MyContactsFilter/MyContactsFilter.module.css?5e5b","components/MyContactsFilter/MyContactsFilter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/MyContacts.module.css?aa16","components/Contacts/MyContacts.jsx"],"sourcesContent":["export const getFilter = store => store.filter;\n","import { getFilter } from '../Filter/filterSelectors';\nimport { createSelector } from '@reduxjs/toolkit';\n\nexport const getAllContacts = store => store.contacts.items;\n\nexport const getFilteredContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) => {\n      const normalizedName = name.toLowerCase();\n      return normalizedName.includes(normalizedFilter);\n    });\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook_wrapper\":\"MyContactForm_phonebook_wrapper__Jz556\",\"phonebook_form\":\"MyContactForm_phonebook_form__RJFCs\",\"input\":\"MyContactForm_input__hxAIX\",\"button\":\"MyContactForm_button__T6bIW\",\"phonebook_name\":\"MyContactForm_phonebook_name__u2RC1\",\"phonebook_number\":\"MyContactForm_phonebook_number__yGgU3\"};","import { useState } from 'react';\nimport { addContact } from '../../Redux/Contacts/contactsOperations';\nimport { getAllContacts } from '../../Redux/Contacts/contactsSelectors';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport css from './MyContactForm.module.css';\n\nconst MyContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const contacts = useSelector(getAllContacts);\n\n  const dispatch = useDispatch();\n\n  const isDublicate = name => {\n    const normalizedName = name.toLowerCase();\n    const result = contacts.find(({ name }) => {\n      return name.toLowerCase() === normalizedName;\n    });\n\n    return Boolean(result);\n  };\n\n  const handleAddContact = ({ name, phone }) => {\n    if (isDublicate(name)) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    dispatch(addContact({ name, phone }));\n\n    setName('');\n    setPhone('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit = handleAddContact({ name, phone });\n  };\n\n  return (\n    <div className={css.phonebook_wrapper}>\n      <form className={css.phonebook_form} onSubmit={handleSubmit}>\n        <label>Name</label>\n        <input\n          className={css.input}\n          onChange={event => setName(event.target.value)}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          placeholder=\"contact name\"\n        />\n\n        <label>Number</label>\n        <input\n          className={css.input}\n          onChange={event => setPhone(event.target.value)}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={phone}\n          placeholder=\"contact number\"\n        />\n\n        <button className={css.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default MyContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_wrapper\":\"ContactList_contacts_wrapper__FulCe\",\"contact_items\":\"ContactList_contact_items__Z0qeG\",\"contactList\":\"ContactList_contactList__UFVCg\",\"button\":\"ContactList_button__7kL4l\",\"contactList__item\":\"ContactList_contactList__item__2K2vx\",\"contactList__name\":\"ContactList_contactList__name__DI0r4\",\"contactList__number\":\"ContactList_contactList__number__olBKR\"};","// import { useSelector, useDispatch } from 'react-redux';\n// import { useEffect } from 'react';\n\n// import { getFilteredContacts } from '../../Redux/Contacts/contactsSelectors';\n// import { deleteContact } from '../../Redux/Contacts/contactsOperations';\n// import { fetchContacts } from '../../Redux/Contacts/contactsOperations';\n\n// import css from './ContactList.module.css';\n\n// const MyContactList = () => {\n//   const contacts = useSelector(getFilteredContacts);\n\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     dispatch(fetchContacts());\n//   }, [dispatch]);\n\n//   const handleRemoveContact = id => {\n//     dispatch(deleteContact(id));\n//   };\n\n//   const names = contacts.map(({ id, name, phone }) => (\n//     <li key={id}>\n//       {name} : {phone}\n//       <button\n//         className={css.button}\n//         onClick={() => handleRemoveContact(id)}\n//         type=\"button\"\n//       >\n//         Delete\n//       </button>\n//     </li>\n//   ));\n\n//   return (\n//     <div className={css.contacts_wrapper}>\n//       <ul className={css.contact_items}>{names}</ul>\n//     </div>\n//   );\n// };\n\n// export default MyContactList;\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport { getFilteredContacts } from '../../Redux/Contacts/contactsSelectors';\n\n\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../Redux/Contacts/contactsOperations';\n\nimport css from './ContactList.module.css';\n\nconst MyContactList = () => {\n  const [loadingContacts, setLoadingContacts] = useState(true);\n  const [loading, setLoading] = useState({});\n  const contacts = useSelector(getFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setLoading(false);\n    dispatch(fetchContacts());\n\n    setLoadingContacts(false);\n  }, [dispatch]);\n\n  const handleRemoveContact = async contactId => {\n    setLoading({ [contactId]: true });\n    await dispatch(deleteContact(contactId));\n    setLoading({ [contactId]: false });\n  };\n\n  return (\n    <>\n      {loadingContacts ? (\n        <p>Loading..</p>\n      ) : (\n        <ul className={css.contactList}>\n          {contacts.map(({ id, name, number }) => (\n            <li key={id} className={css.contactList__item}>\n              <p className={css.contactList__name}>{name}: </p>\n              <p className={css.contactList__number}>{number}</p>\n\n              {!loading[id] ? (\n                <button\n                  className={css.button}\n                  onClick={() => handleRemoveContact(id)}\n                  type=\"button\"\n                >\n                  Delete\n                </button>\n              ) : (\n                <div className={css.loader}>Loading...</div>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default MyContactList;","// extracted by mini-css-extract-plugin\nexport default {\"filter_wrap\":\"MyContactsFilter_filter_wrap__eteZw\",\"input\":\"MyContactsFilter_input__ZLQaP\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from '../../Redux/Filter/filterSelectors';\nimport { setFilter } from '../../Redux/Filter/filter-slice';\n\nimport css from './MyContactsFilter.module.css';\n\nconst MyContactsFilter = () => {\n  const onSetFilter = payload => {\n    dispatch(setFilter(payload));\n  };\n\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    onSetFilter(e.target.value);\n  };\n\n  return (\n    <div className={css.filter_wrap}>\n      <label>Find contacts by name</label>\n      <input\n        className={css.input}\n        onChange={handleFilter}\n        name=\"filter\"\n        type=\"text\"\n        value={filter}\n      />\n    </div>\n  );\n};\n\nexport default MyContactsFilter;\n","// extracted by mini-css-extract-plugin\nexport default {\"phone_part\":\"MyContacts_phone_part__-c9OV\",\"title\":\"MyContacts_title__ggJvr\"};","import MyContactForm from '../MyContactForm/MyContactForm';\nimport MyContactList from '../ContactList/ContactList';\nimport MyContactsFilter from '../MyContactsFilter/MyContactsFilter';\n\n\nimport css from '../Contacts/MyContacts.module.css';\n\nconst MyContacts = () => {\n  return (\n    <div>\n      <h2 className={css.title}>Phonebook</h2>\n      <MyContactForm />\n      <MyContactsFilter />\n      <h2 className={css.title}>Contacts</h2>\n      <MyContactList />\n    </div>\n  );\n};\n\nexport default MyContacts;"],"names":["getFilter","store","filter","getAllContacts","contacts","items","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","_ref","name","includes","onSubmit","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","phone","setPhone","useSelector","dispatch","useDispatch","handleAddContact","_ref3","normalizedName","result","find","_ref2","Boolean","isDublicate","alert","concat","addContact","_jsx","className","css","children","_jsxs","e","preventDefault","onChange","event","target","value","type","pattern","title","required","placeholder","loadingContacts","setLoadingContacts","loading","setLoading","useEffect","fetchContacts","handleRemoveContact","_asyncToGenerator","_regeneratorRuntime","_callee","contactId","_context","prev","next","_defineProperty","deleteContact","stop","_x","apply","arguments","_Fragment","map","id","number","onClick","payload","setFilter","MyContactForm","MyContactsFilter","MyContactList"],"sourceRoot":""}