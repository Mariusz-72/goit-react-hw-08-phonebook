{"version":3,"file":"static/js/98.bae7e90e.chunk.js","mappings":"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","sources":["components/LoginForm/initialState.js","components/LoginForm/fields.js","webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/loginPage/loginPage.module.css?f5b4","pages/loginPage/loginPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/API/components/formField.module.css?40ea","shared/API/components/formField.js","../node_modules/nanoid/index.browser.js","webpack://goit-react-hw-08-phonebook/./src/shared/button/button.module.css?46e3","shared/button/button.jsx","shared/hooks/useForm.js"],"sourcesContent":["const initialState = {\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  email: {\n    type: 'text',\n    name: 'email',\n    required: true,\n    autoFocus: true,\n    label: 'Email',\n    placeholder: 'Enter email',\n  },\n  password: {\n    name: 'password',\n    required: true,\n    label: 'Password',\n    placeholder: 'Enter password',\n  },\n};\n\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"loginpage_wrap\":\"LoginForm_loginpage_wrap__N+Ytr\",\"loginpage_title\":\"LoginForm_loginpage_title__jCRnL\",\"button_wrap\":\"LoginForm_button_wrap__5Y6z-\"};","import UseForm from '../../shared/hooks/useForm';\nimport initialState from './initialState';\nimport FormField from '../../shared/API/components/formField';\nimport fields from './fields';\nimport css from './LoginForm.module.css';\nimport Button from '../../shared/button/button';\n\n\n\nconst LoginForm = ({ onSubmit }) => {\n    const { state, handleChange, handleSubmit } = UseForm({\n        initialState,\n        onSubmit,\n    });\n    const { email, password } = state;\n\n    return (\n      <div>\n        <div className={css.loginpage_wrap}>\n          <h2 className={css.loginpage_title}>Enter your account</h2>\n        </div>\n        <form onSubmit={handleSubmit} className={css.form}>\n          <FormField\n            value={email}\n            handleChange={handleChange}\n            {...fields.email}\n          />\n          <div className={css.iconInput_wrap}>\n            <FormField\n              value={password}\n              handleChange={handleChange}\n              {...fields.password}\n            />\n          </div>\n          <div>\n            <Button className={css.button_signin}> Sign in </Button>\n          </div>\n        </form>\n      </div>\n    );\n};\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"loginpage_wrap\":\"loginPage_loginpage_wrap__Gb-xt\"};","import { useDispatch } from 'react-redux';\nimport { login } from '../../Redux/auth/auth-operations';\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport css from './loginPage.module.css';\n\nconst LoginPage = () => {\n    const dispatch = useDispatch();\n\n    const handleLogin = data => {\n        dispatch(login(data));\n    };\n\n    return (\n        <div className={css.loginpage_wrap}>\n        <LoginForm onSubmit={handleLogin} />\n        </div>\n    );\n};\n\nexport default LoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"formField_field__JeLem\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport css from './formField.module.css';\n\nconst FormField = ({ label, handleChange, ...props }) => {\n    const id = useMemo(() => nanoid(), []);\n\n    return (\n        <>\n        <label htmlFor={id} className={css.label}>\n            {label}\n\n            <input\n            id={id}\n            onChange={handleChange}\n            {...props}\n            className={css.field}\n            />\n        </label>\n        </>\n    );\n};\n\nexport default FormField;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button_button__dpqJS\"};","import css from './button.module.css';\n\nconst Button = ({ children, type = 'submit' }) => {\n    return (\n        <button type={type} className={css.button}>\n        {children}\n        </button>\n    );\n};\n\nexport default Button;\n","import { useState, useCallback } from 'react';\n\nconst UseForm = ({ initialState, onSubmit }) => {\n    const [state, setState] = useState({ ...initialState });\n\n    const handleChange = useCallback(\n        ({ target }) => {\n        const { name, value } = target;\n        setState(prevState => {\n            return { ...prevState, [name]: value };\n        });\n        },\n        [setState]\n    );\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        onSubmit({ ...state });\n        setState({ ...initialState });\n    };\n    return { state, setState, handleChange, handleSubmit };\n};\n\nexport default UseForm;\n"],"names":["email","password","type","name","required","autoFocus","label","placeholder","_ref","onSubmit","_UseForm","UseForm","initialState","state","handleChange","handleSubmit","_jsxs","children","_jsx","className","css","FormField","_objectSpread","value","fields","Button","dispatch","useDispatch","LoginForm","data","login","props","_objectWithoutProperties","_excluded","id","useMemo","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","_Fragment","htmlFor","onChange","_ref$type","_useState","useState","_useState2","_slicedToArray","setState","useCallback","_ref2","target","prevState","_defineProperty","e","preventDefault"],"sourceRoot":""}