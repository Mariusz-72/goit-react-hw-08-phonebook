{"version":3,"file":"static/js/214.7ded4c37.chunk.js","mappings":"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","sources":["components/RegisterForm/initialState.js","components/RegisterForm/fields.js","webpack://goit-react-hw-08-phonebook/./src/components/RegisterForm/registerForm.module.css?0fd0","components/RegisterForm/registerForm.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/registerPage/registerPage.module.css?e3d1","pages/registerPage/registerPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/API/components/formField.module.css?40ea","shared/API/components/formField.js","../node_modules/nanoid/index.browser.js","shared/button/button.module.css","shared/button/button.jsx","shared/hooks/useForm.js"],"sourcesContent":["const initialState = {\n    name: '',\n    email: '',\n    password: '',\n};\n\nexport default initialState;\n","const fields = {\n    name: {\n        type: 'text',\n        name: 'name',\n        required: true,\n        autoFocus: true,\n        label: 'User name',\n        placeholder: ' Enter name',\n    },\n    email: {\n        type: 'email',\n        name: 'email',\n        required: true,\n        label: 'User email',\n        placeholder: ' Enter email',\n    },\n    password: {\n        type: 'passwrod',\n        name: 'password',\n        required: true,\n        label: 'User password',\n        placeholder: 'Enter password',\n    },\n};\n\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"registerForm_form__8tKcV\",\"title_wrap\":\"registerForm_title_wrap__tu+v5\",\"homepage_title\":\"registerForm_homepage_title__zGxAI\",\"button_wrap\":\"registerForm_button_wrap__6N4yv\"};","import UseForm from '../../shared/hooks/useForm';\nimport initialState from './initialState';\nimport FormField from '../../shared/API/components/formField';\nimport fields from './fields';\n\nimport Button from '../../shared/button/button';\n\nimport css from './registerForm.module.css';\n\nconst RegisterForm = ({ onSubmit }) => {\n    const { state, handleChange, handleSubmit } = UseForm({\n        initialState,\n        onSubmit,\n    });\n    const { name, email, password } = state;\n\n    return (\n        <div className={css.homepage_wrap}>\n        <div className={css.title_wrap}>\n            <h2 className={css.homepage_title}>Create account</h2>\n        </div>\n\n        <form onSubmit={handleSubmit} className={css.form}>\n            <FormField value={name} handleChange={handleChange} {...fields.name} />\n            <FormField\n            value={email}\n            handleChange={handleChange}\n            {...fields.email}\n            />\n            <div>\n            <FormField\n                value={password}\n                handleChange={handleChange}\n                {...fields.password}\n            />\n            </div>\n            <div className={css.button_wrap}>\n            <Button> Register </Button>\n            </div>\n        </form>\n        </div>\n    );\n};\n\nexport default RegisterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"registerPage_container__JnUn+\"};","import { useDispatch } from 'react-redux';\nimport { signup } from '../../Redux/auth/auth-operations';\nimport RegisterForm from '../../components/RegisterForm/registerForm';\nimport css from './registerPage.module.css';\n\nconst RegisterPage = () => {\n    const dispatch = useDispatch();\n\n    const handleSignup = data => {\n        dispatch(signup(data));\n    };\n    return (\n        <div className={css.container}>\n        <RegisterForm onSubmit={handleSignup} />\n        </div>\n    );\n};\n\nexport default RegisterPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"formField_field__JeLem\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport css from './formField.module.css';\n\nconst FormField = ({ label, handleChange, ...props }) => {\n    const id = useMemo(() => nanoid(), []);\n\n    return (\n        <>\n        <label htmlFor={id} className={css.label}>\n            {label}\n\n            <input\n            id={id}\n            onChange={handleChange}\n            {...props}\n            className={css.field}\n            />\n        </label>\n        </>\n    );\n};\n\nexport default FormField;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {};","import css from './button.module.css';\n\nconst Button = ({ children, type = 'submit' }) => {\n    return (\n        <button type={type} className={css.button}>\n        {children}\n        </button>\n    );\n};\n\nexport default Button;\n","import { useState, useCallback } from 'react';\n\nconst UseForm = ({ initialState, onSubmit }) => {\n    const [state, setState] = useState({ ...initialState });\n\n    const handleChange = useCallback(\n        ({ target }) => {\n        const { name, value } = target;\n        setState(prevState => {\n            return { ...prevState, [name]: value };\n        });\n        },\n        [setState]\n    );\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        onSubmit({ ...state });\n        setState({ ...initialState });\n    };\n    return { state, setState, handleChange, handleSubmit };\n};\n\nexport default UseForm;\n"],"names":["name","email","password","type","required","autoFocus","label","placeholder","_ref","onSubmit","_UseForm","UseForm","initialState","state","handleChange","handleSubmit","_jsxs","className","css","children","_jsx","FormField","_objectSpread","value","fields","Button","dispatch","useDispatch","RegisterForm","data","signup","props","_objectWithoutProperties","_excluded","id","useMemo","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","_Fragment","htmlFor","onChange","_ref$type","_useState","useState","_useState2","_slicedToArray","setState","useCallback","_ref2","target","prevState","_defineProperty","e","preventDefault"],"sourceRoot":""}